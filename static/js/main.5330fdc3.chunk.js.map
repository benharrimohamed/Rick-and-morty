{"version":3,"sources":["components/Childcomponent.jsx","components/Appbar.jsx","components/Stepper.jsx","components/Mycomponent.jsx","App.js","serviceWorker.js","index.js"],"names":["Childcomponent","props","StyledBadge","withStyles","theme","badge","backgroundColor","status","boxShadow","Badge","classes","makeStyles","root","media","height","paddingTop","title","textAlign","avatar","useStyles","Grid","item","md","xs","sm","Card","className","CardHeader","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","name","charAt","CardMedia","image","CardContent","Typography","display","gutterBottom","species","gender","origin","flexGrow","paddingBottom","menuButton","marginRight","spacing","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","AppBar","Toolbar","noWrap","InputBase","placeholder","input","onChange","inputProps","marginBottom","Stepper","useTheme","MobileStepper","nextButton","Button","size","onClick","next","disabled","isNext","direction","backButton","prev","isPrev","Mycomponent","handleOnInputChange","event","setState","query","target","value","isLoaded","fetchDataFromApi","state","api_URL","nextPage","nextPageLink","prevPage","prevPageLink","items","url","axios","get","then","res","data","results","info","catch","err","console","log","this","Container","style","container","map","key","id","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5330fdc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function Childcomponent (props)  {\r\n\r\n  const StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n      backgroundColor: props.status == \"Alive\" ? \"#5cb85c\" : \"#d9534f\",\r\n      boxShadow: \"0 0 0 3px #fff\"\r\n    },\r\n  }))(Badge);\r\n  \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', \r\n    },\r\n    title : {\r\n      textAlign : 'left'\r\n    },\r\n    avatar: {\r\n      backgroundColor: \"#0275d8\",\r\n    },\r\n  }));\r\n    \r\n  const classes = useStyles();\r\n         \r\n    return (\r\n\r\n     <Grid item md={3} xs={12} sm={6}>\r\n      <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n        <Avatar alt=\"Remy Sharp\">{props.name.charAt(0)}</Avatar>\r\n      </StyledBadge>\r\n        }\r\n        title={props.name}\r\n        className={classes.title}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.image}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.title}>\r\n        Species : {props.species}\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.title}>\r\n        Gender : {props.gender}\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.title}>\r\n        Origin : {props.origin}\r\n      </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Grid>\r\n        );\r\n    }","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingBottom : 20\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Rick And Morty\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onChange={props.search}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom : 20,\r\n  },\r\n});\r\n\r\nexport default function Stepper(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <MobileStepper\r\n      position=\"static\"\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={props.next} disabled={props.isNext === null}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={props.prev} disabled={props.isPrev === null}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Childcomponent from './Childcomponent'\r\nimport Appbar from './Appbar'\r\nimport axios from 'axios'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button'\r\nimport Stepper from './Stepper'\r\n\r\n\r\n\r\nexport default class Mycomponent extends React.Component {\r\n \r\n\r\n    constructor (props) {\r\n\r\n        super (props)\r\n        this.state = {\r\n            items : [],\r\n            api_URL : 'https://rickandmortyapi.com/api/character/?name=',\r\n            nextPage : '',\r\n            prevPage : '',\r\n            isLoaded : false,\r\n            query : ''\r\n        }\r\n    }\r\n\r\n    fetchDataFromApi (url,query) {\r\n          \r\n        axios.get(url+query)\r\n        .then(res => {\r\n          \r\n            this.setState({\r\n                items : res.data.results,\r\n                nextPageLink : res.data.info.next,\r\n                prevPageLink : res.data.info.prev,\r\n                isLoaded : true\r\n            })\r\n        }).catch (err => {\r\n            console.log(err)\r\n        })\r\n     \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.fetchDataFromApi(this.state.api_URL,this.state.query);\r\n    }\r\n\r\n\r\n    handleOnInputChange = (event) => {\r\n        this.setState({\r\n            query : event.target.value,\r\n            isLoaded : false\r\n        }, () => {\r\n            this.fetchDataFromApi(this.state.api_URL,this.state.query)\r\n        })\r\n        \r\n      }\r\n\r\n    nextPage = () => {\r\n    \r\n        this.fetchDataFromApi(this.state.nextPageLink,'')\r\n    }\r\n\r\n    prevPage = () => {\r\n     \r\n        this.fetchDataFromApi(this.state.prevPageLink,'')\r\n    }\r\n\r\n    render() {\r\n\r\n         var {items,nextPageLink, prevPageLink} = this.state\r\n          return (\r\n            <div>\r\n            <Container spacing={1}>\r\n            <Grid item md={12} xs={12}> \r\n            <Appbar search={this.handleOnInputChange}></Appbar>\r\n            </Grid>\r\n            <Grid item md={12}>   \r\n            <Stepper\r\n            isNext={nextPageLink} \r\n            isPrev={prevPageLink} \r\n            next={this.nextPage} \r\n            prev={this.prevPage}\r\n            style={{justifyContent: 'flex-end'}}\r\n            />\r\n            </Grid>\r\n            <Grid item container spacing={1}>\r\n             { items.map (item => \r\n             <Childcomponent \r\n             key={item.id} \r\n             name={item.name} \r\n             status ={item.status} \r\n             species={item.species}\r\n             image={item.image}\r\n             gender={item.gender}\r\n             origin={item.origin.name}\r\n             ></Childcomponent>)}\r\n            </Grid>\r\n            </Container> \r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    ","import React from 'react';\nimport './App.css';\nimport Mycomponent from './components/Mycomponent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Mycomponent/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}